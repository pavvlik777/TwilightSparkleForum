@model TwilightSparkle.Forum.Models.Home.UserProfileViewModel
@{
    ViewData["Title"] = $"{Model.Username} profile";
}

<link rel="stylesheet" type="text/css" href="~/css/profile.css" />
@using (Html.BeginForm("SaveChanges", "Home", FormMethod.Post, htmlAttributes: new { @class = "tab-form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Username)
    @Html.HiddenFor(m => m.Email)
    @Html.HiddenFor(m => m.ImageExternalId, new { id = "hidden-upload-image-url" })
    @Html.HiddenFor(m => m.ProfileImageUrl)
    @Html.HiddenFor(m => m.UploadImageUrl)
    <ul class="tab-list">
        <li id="identity-list-item">
            <a href="javascript:;" id="default-tab" class="ui-tab">Identity</a>
        </li>
        <li id="threads-list-item">
            <a href="javascript:;" class="ui-tab">Threads fake tab</a>
        </li>
        <li class="save-changes right">
            <button class="button secondary-button" id="save-changes-button" disabled type="submit">Save changes</button>
        </li>
    </ul>
    <div id="identity-tab" class="tab-panel">
        <h2>User identity</h2>
        <section>
            <div class="column column-1">
                <img id="profile-image" src="@Model.ProfileImageUrl" class="round" alt="User image" width="120" height="120" />
                <div id="upload-image-modal" class="image-upload-dialog">
                    <header>
                        <span id="close-upload-dialog">&times;</span>
                        <h2>Upload image</h2>
                    </header>
                    <main>
                        <input id="image-upload-file" type="file" accept="image/*" name="file" />
                        <button id="image-upload-button" type="button" data-request-url="@Model.UploadImageUrl" class="button secondary-button">Confirm</button>
                    </main>
                </div>
                <button type="button" id="image-upload-dialog-button" class="button secondary-button">Upload new image</button>
            </div>
            <div class="column column-2 column-start">
                <div class="control-group">
                    @Html.LabelFor(m => m.Username)
                    <p>@Html.DisplayFor(m => m.Username)</p>
                </div>
                <div class="control-group">
                    @Html.LabelFor(m => m.Email)
                    <p>@Html.DisplayFor(m => m.Email)</p>
                </div>
            </div>
        </section>
    </div>
    <div id="threads-tab" class="tab-panel">
        <h2>User threads</h2>
        <section>
            @foreach (var thread in Model.UserThreads)
            {
                <div class="control-group thread-details-group">
                    @Html.ActionLink(thread.Title, "ThreadDetails", "Threads", new { threadId = thread.ThreadId })
                </div>
            }
        </section>
    </div>
}
<script src="~/js/profile.js"></script>